# TrackieLLM Rust Workspace Manifest
# This file defines the root of the Cargo workspace, allowing unified management
# of all Rust crates within the project.

[workspace]
# The resolver specifies how Cargo resolves feature flags. Version "2" is the modern, recommended setting.
resolver = "2"

# List all member crates that are part of this workspace.
# Cargo will manage these as a single cohesive unit.
members = [
    "src/monitoring",
    "src/security",
    "src/deployment",
    "src/experiments",
    "src/internal_tools",
    "src/logging_ext",
    "src/memory",
    "src/ai_models",
    "src/networking",
    "src/async_tasks",
    "src/integration",
    "src/profiling",
    "src/cortex/rust",
    "src/vision",
    "src/audio",
    "src/sensors",
    "src/interaction",
    "src/utils",
]

# Shared dependencies for all workspace members.
# This ensures version consistency across the entire project.
# Individual crates can inherit these by using `dependency.workspace = true`.
[workspace.dependencies]
# Core utilities
log = "0.4"
thiserror = "1.0"
anyhow = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Asynchronous runtime and primitives
tokio = { version = "1", features = ["full"] }
futures = "0.3"

# FFI and interoperability
cbindgen = "0.26"


# Build profiles define compiler settings for different contexts.
[profile.dev]
panic = "unwind" # Default for easier debugging.

[profile.release]
# Optimize for maximum performance.
opt-level = 3
# Enable Fat Link-Time Optimization for whole-program optimization.
lto = "fat"
# Use a single codegen unit for maximum optimization potential, at the cost of compile time.
codegen-units = 1
# Abort on panic for smaller binaries and no unwinding overhead, critical for embedded/real-time.
panic = "abort"
# Remove debug symbols from the final executable to reduce size.
strip = true